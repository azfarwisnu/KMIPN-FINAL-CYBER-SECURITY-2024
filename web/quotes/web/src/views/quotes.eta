<<<<<<< HEAD:web/quotes/quotes/web/src/views/quotes.eta
<!DOCTYPE html>
<html lang="en">

<head>
    <title>Edit quotes</title>
    <script src="https://www.google.com/recaptcha/api.js?trustedtypes=true" async defer></script>
    <%~ includeFile('partial/head', it) %>
    <style>
        body {
            background-image: url('stickers/background.png');
            background-size: cover;
            background-repeat: no-repeat;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .container {
            text-align: center;
            background: rgba(255, 255, 255, 0.8);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        h1 {
            font-family: 'Arial', sans-serif;
            font-size: 2.5rem;
            font-weight: bold;
            color: #333;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
            margin-bottom: 1rem;
        }
        .circular-sticker {
            border-radius: 50%;
            width: 15rem;
            height: 15rem;
            object-fit: cover;
        }
        #sticker-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 2rem;
        }
    </style>
</head>

<body>
    <div class="container-sm mt-5">
        <h1 class="mb-3">Edit quotes</h1>
        <div class="row mb-5 justify-content-center">
            <div class="col-sm-9">
                <h3 class="mt-3">Kata katanya hari ini bang <span id="username">User</span></h3>
                <textarea name="" id="about" class="form-control" rows="10"></textarea>
            </div>
        </div>
        <div id="sticker-container">
            <h3 class="mb-3 mt-3">Sticker</h3>
            <img src="stickers/defaultsticker.png" class="img-fluid circular-sticker" id="sticker">
            <div class="mt-3 mb-3">
                <label class="form-label" for="stickerFile">Upload sticker</label>
                <input type="file" class="form-control" id="stickerFile">
            </div>
        </div>

        <div class="container">
            <button type="submit" class="btn btn-primary mb-2" id="save">Save</button>
            <button type="submit" class="btn btn-primary mb-2" id="logout">Logout</button>
            <button type="submit" class="btn btn-primary mb-2" id="share">Share</button>
            <button type="submit" class="btn btn-primary mb-2" id="report">Share your quotes with admin</button>
            <div class="g-recaptcha" data-sitekey="<%= it.RECAPTCHA_SITE_KEY %>" data-callback="onReport"
                data-size="invisible"></div>
        </div>
    </div>

    <script nonce="<%= it.nonce %>">
        const init = () => {
            fetch('/api/quotes')
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        username.innerText = data.data.username
                        about.value = data.data.about
                        sticker.src = data.data.sticker
                    } else {
                        alert(data.message)
                    }
                })
        }
        init()
        stickerFile.addEventListener('change', () => {
            const file = stickerFile.files[0]
            if (file) {
                sticker.src = URL.createObjectURL(file)
            }
        })
        save.addEventListener('click', () => {
            const formData = new FormData()
            formData.append('about', about.value)
            if (stickerFile.files.length > 0)
                formData.append('sticker', stickerFile.files[0])
            fetch('/api/quotes', {
                method: 'PUT',
                body: formData
            })
                .then(res => {
                    if (res.status === 413)
                        return { success: false, message: 'File too large' }
                    return res.json()
                })
                .then(data => {
                    if (data.success) {
                        init()
                        alert('Saved!')
                    } else
                        alert(data.message)
                })
        })
        share.addEventListener('click', () => {
            location = `/share?username=${username.innerText}`
        })
        function onReport(token) {
            const url = new URL(`/share?username=${username.innerText}`, location)
            fetch('/api/report', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ url: url.href, 'g-recaptcha-response': token }),
            })
                .then(res => res.json())
                .then(data => {
                    if (data.success)
                        alert('Request sent!')
                    else
                        alert(data.message)
                    grecaptcha.reset();
                })
        }
        report.addEventListener('click', () => {
            grecaptcha.execute()
        })
        logout.addEventListener('click', () => {
            fetch('/api/logout', {
                method: 'POST'
            })
                .then(res => res.json())
                .then(data => {
                    if (data.success)
                        location = '/'
                    else
                        alert(data.message)
                })
        })
    </script>

</body>

</html>
=======
<!DOCTYPE html>
<html lang="en">

<head>
    <title>Edit quotes</title>
    <script src="https://www.google.com/recaptcha/api.js?trustedtypes=true" async defer></script>
    <%~ includeFile('dess/head', it) %>
    <style>
        body {
            background-image: url('stickers/background.png');
            background-size: cover;
            background-repeat: no-repeat;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .container {
            text-align: center;
            background: rgba(255, 255, 255, 0.8);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        h1 {
            font-family: 'Arial', sans-serif;
            font-size: 2.5rem;
            font-weight: bold;
            color: #333;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
            margin-bottom: 1rem;
        }
        .circular-sticker {
            border-radius: 50%;
            width: 15rem;
            height: 15rem;
            object-fit: cover;
        }
        #sticker-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 2rem;
        }
    </style>
</head>

<body>
    <div class="container-sm mt-5">
        <h1 class="mb-3">Edit quotes</h1>
        <div class="row mb-5 justify-content-center">
            <div class="col-sm-9">
                <h3 class="mt-3">Kata katanya hari ini bang <span id="username">User</span></h3>
                <textarea name="" id="about" class="form-control" rows="10"></textarea>
            </div>
        </div>
        <div id="sticker-container">
            <h3 class="mb-3 mt-3">Sticker</h3>
            <img src="stickers/defaultsticker.png" class="img-fluid circular-sticker" id="sticker">
            <div class="mt-3 mb-3">
                <label class="form-label" for="stickerFile">Upload sticker</label>
                <input type="file" class="form-control" id="stickerFile">
            </div>
        </div>

        <div class="container">
            <button type="submit" class="btn btn-primary mb-2" id="save">Save</button>
            <button type="submit" class="btn btn-primary mb-2" id="logout">Logout</button>
            <button type="submit" class="btn btn-primary mb-2" id="preview">Preview</button>
            <button type="submit" class="btn btn-primary mb-2" id="report">Send your quotes with anothers</button>
            <div class="g-recaptcha" data-sitekey="<%= it.RECAPTCHA_SITE_KEY %>" data-callback="onReport"
                data-size="invisible"></div>
        </div>
    </div>

    <script nonce="<%= it.nonce %>">
        const init = () => {
            fetch('/api/quotes')
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        username.innerText = data.data.username
                        about.value = data.data.about
                        sticker.src = data.data.sticker
                    } else {
                        alert(data.message)
                    }
                })
        }
        init()
        stickerFile.addEventListener('change', () => {
            const file = stickerFile.files[0]
            if (file) {
                sticker.src = URL.createObjectURL(file)
            }
        })
        save.addEventListener('click', () => {
            const formData = new FormData()
            formData.append('about', about.value)
            if (stickerFile.files.length > 0)
                formData.append('sticker', stickerFile.files[0])
            fetch('/api/quotes', {
                method: 'PUT',
                body: formData
            })
                .then(res => {
                    if (res.status === 413)
                        return { success: false, message: 'File too large' }
                    return res.json()
                })
                .then(data => {
                    if (data.success) {
                        init()
                        alert('Saved!')
                    } else
                        alert(data.message)
                })
        })
        preview.addEventListener('click', () => {
            location = `/preview?username=${username.innerText}`
        })
        function onReport(token) {
            const url = new URL(`/preview?username=${username.innerText}`, location)
            fetch('/api/report', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ url: url.href, 'g-recaptcha-response': token }),
            })
                .then(res => res.json())
                .then(data => {
                    if (data.success)
                        alert('Request sent!')
                    else
                        alert(data.message)
                    grecaptcha.reset();
                })
        }
        report.addEventListener('click', () => {
            grecaptcha.execute()
        })
        logout.addEventListener('click', () => {
            fetch('/api/logout', {
                method: 'POST'
            })
                .then(res => res.json())
                .then(data => {
                    if (data.success)
                        location = '/'
                    else
                        alert(data.message)
                })
        })
    </script>

</body>

</html>
>>>>>>> c62a79e9bb8a7cefc0fcb1f2322de85d4a1d3839:web/quotes/web/src/views/quotes.eta
